{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","React","Component","connect","state","console","log","type","payload","duration","App","combineReducers","selectedSong","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"2OAIMA,E,2KACU,IAAD,OACX,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAC1B,OACE,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC9B,yBAAKF,UAAU,yBACb,4BACEG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,IACrCC,UAAU,qBAFZ,WAOF,yBAAKA,UAAU,WAAf,IAA2BD,EAAKG,a,+BAOtC,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GApB3BC,IAAMC,WA6BdC,eALS,SAAAC,GAEtB,OADAC,QAAQC,IAAIF,GACL,CAAEZ,MAAOY,EAAMZ,SAKtB,CAAEO,WClCsB,SAAAL,GAExB,MAAO,CACLa,KAAM,gBACNC,QAASd,KD4BES,CAGbd,GEbac,eAJS,SAAAC,GACtB,MAAO,CAAEV,KAAMU,EAAML,cAGRI,EApBI,SAAAZ,GACjB,OAAKA,EAAMG,KAIT,6BACE,4CACA,qCACUH,EAAMG,KAAKG,MACnB,6BAFF,aAGaN,EAAMG,KAAKe,WARnB,kDCcIC,EAfH,WACV,OACE,yBAAKf,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,UCMKgB,cAAgB,CAC7BnB,MAjBmB,WACnB,MAAO,CACL,CAAEK,MAAO,YAAaY,SAAU,QAChC,CAAEZ,MAAO,SAAUY,SAAU,QAC7B,CAAEZ,MAAO,UAAWY,SAAU,QAC9B,CAAEZ,MAAO,UAAWY,SAAU,UAahCV,WATwB,WAAkC,IAAjCa,EAAgC,uDAAjB,KAAMC,EAAW,uCACzD,MAAoB,kBAAhBA,EAAON,KACFM,EAAOL,QAETI,KCRTE,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.fdcda832.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectSong } from \"../actions\";\r\n\r\nclass SongList extends React.Component {\r\n  renderList() {\r\n    return this.props.songs.map(song => {\r\n      return (\r\n        <div className=\"item\" key={song.title}>\r\n          <div className=\"right floated content\">\r\n            <button\r\n              onClick={() => this.props.selectSong(song)}\r\n              className=\"ui button primary\"\r\n            >\r\n              Select\r\n            </button>\r\n          </div>\r\n          <div className=\"content\"> {song.title}</div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return { songs: state.songs };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { selectSong }\r\n)(SongList);\r\n","//NAMED EXPORT\r\nexport const selectSong = song => {\r\n  //Return An Action\r\n  return {\r\n    type: \"SONG_SELECTED\",\r\n    payload: song\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SongDetail = props => {\r\n  if (!props.song) {\r\n    return <div>Select a song!</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h3>Details for </h3>\r\n      <p>\r\n        Title: {props.song.title}\r\n        <br />\r\n        Duration: {props.song.duration}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { song: state.selectSong };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongDetail);\r\n","import React from \"react\";\r\nimport SongList from \"./SongList\";\r\nimport SongDetail from \"./SongDetail\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container grid\">\r\n      <div className=\"ui row\">\r\n        <div className=\"column eight wide\">\r\n          <SongList />\r\n        </div>\r\n        <div className=\"column eight wide\">\r\n          <SongDetail />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n//REDUCER = DATA of State\r\nconst songsReducer = () => {\r\n  return [\r\n    { title: \"No scrubs\", duration: \"4.05\" },\r\n    { title: \"rarara\", duration: \"2.15\" },\r\n    { title: \"ssssssf\", duration: \"3.45\" },\r\n    { title: \"Nodgggg\", duration: \"4.44\" }\r\n  ];\r\n};\r\n\r\nconst selectSongReducer = (selectedSong = null, action) => {\r\n  if (action.type === \"SONG_SELECTED\") {\r\n    return action.payload;\r\n  }\r\n  return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n  songs: songsReducer,\r\n  selectSong: selectSongReducer\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}